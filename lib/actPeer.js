// –û—Ç–ø—Ä–∞–≤–∫–∞
function send(name, msg) {
  return global.out.push({t: 's', n: name, m: msg})
}

// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–µ–π—Å—Ç–≤–∏–π –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–µ
module.exports = function(msg) {
  let st = global.st

  // –õ–∞–≥–µ—Ä—å
  if (st.cite == '–ª–∞–≥–µ—Ä—å') {
    send('peer', 'üèò–í –ù—å—é-–†–∏–Ω–æ')
    st.cite = '–º–∞—Ä—à'
    return
  }

  // –ì–æ—Ä–æ–¥ –†–∏–Ω–æ
  if (st.cite == '—Ä–∏–Ω–æ') {
    send('peer', '/eat1')
    send('peer', '/eat1')
    send('peer', '/eat1')
    send('peer', 'üë£–ü—É—Å—Ç–æ—à—å')
    st.cite = '–º–∞—Ä—à'
    return
  }

  // –ë–∏—Ç–≤–∞ —Å –≥–∏–≥–∞–Ω—Ç–æ–º
  if (st.cite == '–≥–∏–≥–∞–Ω—Ç') {
    if (!st.lowHealth)
      send('peer', '‚öîÔ∏è–ê—Ç–∞–∫–æ–≤–∞—Ç—å')
    else {
      send('peer', '‚õ∫Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è')
      send('peer', '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∞–≥–µ—Ä—å')
      st.cite = '–º–∞—Ä—à'
    }
    return
  }

  // –î–∞–Ω–∂
  if (st.cite == '–¥–∞–Ω–∂') {
    send('peer', '–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ')
    return
  }

  // –ü—É—Å—Ç–æ—à—å
  if (st.cite == '–ø—É—Å—Ç–æ—à—å') {
    // –í–æ—é–µ–º –∑–ª–æ–≥–æ –º–æ–±–∞
    if (st.angryMob) {
      send('peer', '‚öîÔ∏è–î–∞—Ç—å –æ—Ç–ø–æ—Ä')
      return
    }

    // –¢–æ—Ä–≥—É–µ–º –¥–æ–±—Ä–æ–≥–æ –º–æ–±–∞
    if (st.goodMob) {
      send('peer', '/buy_5i')
      st.goodMob = false
      return
    }

    // –ò–¥—ë–º –∫—É–¥–∞ –Ω–∞–¥–æ
    st.cite = '–º–∞—Ä—à'
    if (actPath()) return
    else {
      send('peer', 'üë£–ò–¥—Ç–∏ –¥a–ª—å—à–µ')
      // –ü—Ä–æ–∂–∏–º–∞–µ–º /cstock
      if (st.garbage && st.garbage.match('–ü–æ–ª—É—á–µ–Ω–æ'))
        send('peer', '/cstock')
      return
    }
  }

  // –ù–∞ –º–∞—Ä—à–µ
  if (st.cite == '–º–∞—Ä—à') {
    // –î–æ–ø—Ä–æ–∂–∏–º–∞–µ–º /dl_%d –∏–ª–∏ /del_%d –ø—Ä–∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞–Ω–∏–∏ –º—É—Å–æ—Ä–∞
    if (st.garbage && !st.garbage.match('–ü–æ–ª—É—á–µ–Ω–æ')) {
      send('peer', st.garbage)
      return
    }

    // –ö—É—à–∞–µ–º
    if (st.hangry > 70) {
      send('peer', '/myfood')
      send('peer', '/use_104')
      st.hangry = 0
    }
  }
}

// –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–∏–ª–æ–º–µ—Ç—Ä–∞–∂
function actPath() {
  let st = global.st
  let x  = Number(st.x)

  if (!st.dark) {
    switch (x) {
      case 11:
        send('peer', '–°—Ç–∞—Ä–∞—è —à–∞—Ö—Ç–∞')
        send('peer', '–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ')
        return true
//      case 12: //case's options : 9,12, 20, 46, 54
//        send('peer', '/voevat_suda')
//        return true
      case 22:
        send('peer', 'üö∑–í –¢–µ–º–Ω—É—é –∑–æ–Ω—É')
        return true
      case 45:
        send('peer', 'üåÅ–í—ã—Å–æ–∫–∏–π –•—Ä–æ—Ç–≥–∞—Ä')
        send('peer', '–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ')
        return true
//      case 50:
//        send('peer', 'üõë–†—É–∏–Ω—ã –ì–µ–∫—Å–∞–≥–æ–Ω–∞')
//        send('peer', '–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ')
//        return true
      case 51:
        send('peer', 'üõè–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—Ä–∏–≤–∞–ª')
        send('peer', '/deeprest')
        return true
      case 52:
        send('peer', 'üö∑–í –¢–µ–º–Ω—É—é –∑–æ–Ω—É')
        return true
      case 73:
        send('peer', '‚õ∫Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è')
        send('peer', '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∞–≥–µ—Ä—å')
        return true
      default: return false // –£–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∏–ª–æ–º–µ—Ç—Ä–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω
    }
  } else { // –ï—Å–ª–∏ —Ç–µ–º–Ω–æ
    switch (x) {
      case 23:
        send('peer', 'üöΩ–°—Ç–æ—á–Ω–∞—è —Ç—Ä—É–±–∞')
        send('peer', '–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ')
        return true
      case 34:
        send('peer', 'ü¶á–ë—ç—Ç-–ø–µ—â–µ—Ä–∞')
        send('peer', '–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ')
        return true
      case 56:
        send('peer', 'üî¨–ù–∞—É—á–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å')
        send('peer', '–î–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ')
        return true
//      case 63: //case's options : 24, 32, 38, 63
//        send('peer', '/voevat_suda')
//        return true
      default: return false // –£–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∏–ª–æ–º–µ—Ç—Ä–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω
    }
  }
}
